@page "/Book/EditBook/{id:int}"
@using BookListManager.Models
@inject NavigationManager Nav

@if (book != null)
    {
        

            <div class="container mt-4">
                <div class="col-md-8 offset-md-2">
                    <div class="card">
                        <div class="card-header bg-primary text-white">
                            <h2>Edit Book</h2>
                        </div>
                        <div class="card-body">
                            <EditForm Model="book" FormName="formBook" OnValidSubmit="Submit" >
                            <DataAnnotationsValidator></DataAnnotationsValidator>
                             
                                <InputNumber @bind-Value="book.BookId" hidden ></InputNumber>
                                <div class="form-group mb-3">
                                     <ValidationMessage For="() =>book.Title "></ValidationMessage>
                                     <label  class="form-label">Title</label>
                                     <InputText @bind-Value="book.Title" class="form-control" placeholder="What the title?"></InputText>
                                    </div>

                                <div class="form-group mb-3">
                                    <ValidationMessage For="() =>book.Author "></ValidationMessage>
                                    <label class="form-label">Author</label>
                                    <InputText @bind-Value="book.Author" class="form-control" placeholder="Who wrote it?"></InputText> 
                                    </div>
                                    
                                <div class="d-flex justify-content-between">
                                    <button type="submit" class="btn btn-primary">Save</button>
                                    <a href="/Books" >Cancel</a>
                                </div>
                             </EditForm>
                        </div>
                    </div>

                </div>
            </div>
       
       
}
else
{
    <div class="container mt-4">
        <div class="alert alert-danger">
            <strong>Error!</strong> Book not found.
        </div>
    </div>
}



@code {
    [Parameter]
    public int id { get; set; }

    [SupplyParameterFromForm(FormName ="formBook")]
    private Book? book{ get; set; }

    protected override void OnParametersSet()
    {
        //book ??= BooksRepository.GetBookById(this.id);
    }
    private void Submit()
    {
        if(book != null)
        {
            //BooksRepository.UpdateBook(book.BookId, book);  
        }
        Nav.NavigateTo("/books");

    }

}
